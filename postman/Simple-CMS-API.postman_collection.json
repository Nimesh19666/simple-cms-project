{
  "info": {
    "name": "Simple CMS API",
    "description": "Complete API collection for Simple CMS with Laravel backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.test('Login successful - Admin role', function () {",
                  "        pm.expect(response.user.role).to.equal('admin');",
                  "    });",
                  "    pm.test('Token received', function () {",
                  "        pm.expect(response.token).to.not.be.empty;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            },
            "description": "Login with admin credentials to get authentication token"
          }
        },
        {
          "name": "Login Author",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.test('Login successful - Author role', function () {",
                  "        pm.expect(response.user.role).to.equal('author');",
                  "    });",
                  "    pm.test('Token received', function () {",
                  "        pm.expect(response.token).to.not.be.empty;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"author@example.com\",\n  \"password\": \"password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            },
            "description": "Login with author credentials"
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/user",
              "host": ["{{base_url}}"],
              "path": ["user"]
            },
            "description": "Get currently authenticated user details"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/logout",
              "host": ["{{base_url}}"],
              "path": ["logout"]
            },
            "description": "Logout and invalidate current token"
          }
        }
      ]
    },
    {
      "name": "üìÇ Categories (Admin Only)",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            },
            "description": "Retrieve all categories (Admin only)"
          }
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Technology\",\n  \"description\": \"Articles about web development, programming, and tech trends\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            },
            "description": "Create a new category (Admin only)"
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Web Development\",\n  \"description\": \"Updated description for web development category\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories/1",
              "host": ["{{base_url}}"],
              "path": ["categories", "1"]
            },
            "description": "Update an existing category (Admin only)"
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/categories/1",
              "host": ["{{base_url}}"],
              "path": ["categories", "1"]
            },
            "description": "Delete a category (Admin only)"
          }
        }
      ]
    },
    {
      "name": "üìÑ Articles",
      "item": [
        {
          "name": "Get All Articles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/articles",
              "host": ["{{base_url}}"],
              "path": ["articles"]
            },
            "description": "Get all articles (filtered by user role)"
          }
        },
        {
          "name": "Get Articles with Filters",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/articles?status=Published&category=1&date_from=2024-01-01&date_to=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["articles"],
              "query": [
                {
                  "key": "status",
                  "value": "Published",
                  "description": "Filter by article status"
                },
                {
                  "key": "category",
                  "value": "1",
                  "description": "Filter by category ID"
                },
                {
                  "key": "date_from",
                  "value": "2024-01-01",
                  "description": "Filter from date (YYYY-MM-DD)"
                },
                {
                  "key": "date_to",
                  "value": "2024-12-31",
                  "description": "Filter to date (YYYY-MM-DD)"
                }
              ]
            },
            "description": "Get articles with various filters applied"
          }
        },
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Complete Guide to Laravel API Development\",\n  \"content\": \"Laravel provides excellent tools for building modern REST APIs. In this comprehensive guide, we'll explore how to create scalable, secure APIs using Laravel's built-in features. We'll cover authentication with Sanctum, validation techniques, database relationships, error handling, and best practices for API design. You'll learn to build APIs that can handle real-world production traffic while maintaining clean, maintainable code. This guide includes practical examples and advanced patterns used in enterprise applications.\",\n  \"status\": \"Draft\",\n  \"category_ids\": [1]\n}"
            },
            "url": {
              "raw": "{{base_url}}/articles",
              "host": ["{{base_url}}"],
              "path": ["articles"]
            },
            "description": "Create a new article (triggers AI processing for slug and summary)"
          }
        },
        {
          "name": "Get Single Article",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/articles/1",
              "host": ["{{base_url}}"],
              "path": ["articles", "1"]
            },
            "description": "Get a specific article by ID"
          }
        },
        {
          "name": "Update Article",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Advanced Laravel API Development Guide\",\n  \"content\": \"Updated content with more advanced examples and best practices for Laravel API development. This expanded guide now includes performance optimization, caching strategies, and deployment considerations.\",\n  \"status\": \"Published\",\n  \"category_ids\": [1]\n}"
            },
            "url": {
              "raw": "{{base_url}}/articles/1",
              "host": ["{{base_url}}"],
              "path": ["articles", "1"]
            },
            "description": "Update an existing article (triggers AI re-processing if content/title changed)"
          }
        },
        {
          "name": "Delete Article",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/articles/1",
              "host": ["{{base_url}}"],
              "path": ["articles", "1"]
            },
            "description": "Delete an article (Authors can only delete their own)"
          }
        }
      ]
    }
  ]
}